{
  /* Supported authentication types are: "custom","anonymous", "pam", "default".
   * "default" means "not set" and is equal to "anonymous". */
  "authentication": "default",

  "pam": {
    /* Disable PAM account management. Needed as workaround for WSL. */
    "noAccountManagement": false
  },

  /* Generic server settings */
  "server": {
    /* supported special addresses: "0.0.0.0", "::", "*" */
    "address": null,
    /* defaults to 21 or 990 (when implicit AUTH TLS is active) */
    "port": null,
    /* PASV/EPSV-specific options */
    "pasv": {
      /* PASV port range in the form "from:to" (inclusive) */
      "range": null,
      /* Allow promiscuous PASV (IOW: Allow data connection to different IP than remote IP of control connection) */
      "promiscuous": false
    }
  },

  /* Settings for FTPS support. */
  "ftps": {
    /* Path to the PKCS#12-formatted certificate with private key. */
    "certificate": null,
    /* Password used to decrypt the PFX file. */
    "password": null,
    /* Use implicit AUTH TLS? */
    "implicit": false
  },

  /* File system layout
   *
   * Only works for "filesystem" and "unix" backends.
   *
   * Available options are:
   * - "single-root": Same chroot for all users
   * - "root-per-user": chroot on root/username
   * - "pam-home": Same root for all users, $HOME is default directory (only available with "pam" authentication)
   * - "pam-home-chroot": chroot on $HOME (only available with "pam" authentication)
   *
   * The root for anonymous users when selecting "pam-home" or "pam-home-chroot" is either /tmp or %TEMP%.
   * */
  "layout": "single-root",

  /* Backend section */

  /* Select one of the backend types below. */
  "backend": "system-io",

  /* Use System.IO-based file system access. */
  "system-io": {
    /* Defaults to /tmp or %TEMP% */
    "root": null
  },

  /* Use the native Linux API for file system access. */
  "unix": {
    /* Defaults to "/" or whatever the authentication method returns as root */
    "root": null
  },

  /* Use an in-memory file system (per-user) */
  "in-memory": {
    /* Keep anonymous instances? */
    "keepAnonymous": false
  },

  /* Use Google Drive as backend.
   * Has to be selected as "google-drive:user" or "google-drive:service" */
  "google-drive": {
    /* Are the files uploaded in the background?
     * The file information will be faked by the server and the client sees a completely uploaded file.
     * This feature was required for earlier versions of the Google Drive API. */
    "backgroundUpload": false,
    /* Use a users Google Drive as file system */
    "user": {
      /* Path to client secrets file. */
      "clientSecrets": null,
      /* Name of the user */
      "userName": null,
      /* Refresh OAuth token on start. */
      "refreshToken": false
    },
    /* Use a users Google Drive with a service account */
    "service": {
      /* A credential file for a service. */
      "credentialFile": null
    }
  }
}
